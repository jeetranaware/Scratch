{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\MIT-Scratch-Clone\\\\src\\\\Components\\\\eventBody.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { SingleAction } from \"./singleAction\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Button } from \"@mui/material\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport DisabledByDefaultIcon from \"@mui/icons-material/DisabledByDefault\";\nimport { Sprites } from \"./spriteProps\";\nimport Positions from \"./positons\";\nimport Draggable1 from \"react-draggable\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { WARN_MSG_POS, WARN_MSG_SIZE } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventBody = props => {\n  _s();\n  const {\n    moves,\n    setMoves,\n    actions,\n    setActions,\n    setActions2,\n    actions2\n  } = props;\n  const ref = React.useRef();\n  const ref2 = React.useRef();\n  let r = \"0%\";\n  let t = \"0%\";\n  let scale = 1;\n  let angle = 0;\n  let r2 = \"0%\";\n  let t2 = \"0%\";\n  let scale2 = 1;\n  let angle2 = 0;\n  const [hello, setHello] = React.useState(false);\n  const [hello2, setHello2] = React.useState(false);\n  const [theme] = React.useState(false);\n  const [displayAddIcon, setDisplayAddIcon] = React.useState(true);\n  const [sprite, setSprite] = React.useState(require(\"../Assets/images/cat.png\"));\n  const [sprite2, setSprite2] = React.useState(null);\n  console.log(\"rendering...\");\n  function checkCollision() {\n    const rect1 = ref.current.getBoundingClientRect();\n    const rect2 = ref2.current.getBoundingClientRect();\n    return rect1.x < rect2.x + rect2.width && rect1.x + rect1.width > rect2.x && rect1.y < rect2.y + rect2.height && rect1.y + rect1.height > rect2.y;\n  }\n  function swapAnimations() {\n    // Swap actions when characters collide\n    const tempActions = [...actions];\n    const tempActions2 = [...actions2];\n    setActions(tempActions2);\n    setActions2(tempActions);\n  }\n  function transform(temp, xAxis, action1) {\n    let value = temp.toString();\n    if (xAxis) {\n      if (action1) {\n        r = value.concat(\"%\");\n      } else {\n        r2 = value.concat(\"%\");\n      }\n    } else {\n      if (action1) {\n        t = value.concat(\"%\");\n      } else {\n        t2 = value.concat(\"%\");\n      }\n    }\n    action1 ? ref.current.style.transform = `scale(${scale})translate(${r}, ${t}) rotate(${angle}deg)` : ref2.current.style.transform = `scale(${scale2})translate(${r2}, ${t2}) rotate(${angle2}deg)`;\n  }\n  function moveUp(i, action1) {\n    //move up top - 50\n    setTimeout(() => {\n      let temp = parseInt(action1 ? t.slice(0, -1) : t2.slice(0, -1));\n      temp = temp - 20;\n      if (temp < -140) {\n        refresh(WARN_MSG_POS);\n        return;\n      }\n      transform(temp, false, action1);\n      // Check for collision immediately after moving\n      if (checkCollision()) {\n        handleCollision(temp, action1);\n        return; // Stop further actions if collision occurs\n      }\n    }, i * 1500);\n  }\n  function moveDown(i, action1) {\n    //move down top + 50\n    setTimeout(() => {\n      let temp = parseInt(action1 ? t.slice(0, -1) : t2.slice(0, -1));\n      temp = temp + 20;\n      if (temp > 140) {\n        refresh(WARN_MSG_POS);\n        return;\n      }\n      transform(temp, false, action1);\n      // Check for collision immediately after moving\n      if (checkCollision()) {\n        handleCollision(temp, action1);\n        return;\n      }\n    }, i * 1500);\n  }\n  function moveRight(i, action1) {\n    setTimeout(() => {\n      let temp = parseInt(action1 ? r.slice(0, -1) : r2.slice(0, -1));\n      temp = temp + 20;\n      if (temp > 290) {\n        refresh(WARN_MSG_POS);\n        return;\n      }\n      transform(temp, true, action1);\n      if (checkCollision()) {\n        handleCollision(temp, action1);\n        return;\n      }\n    }, i * 1500);\n  }\n  function moveLeft(i, action1) {\n    setTimeout(() => {\n      let temp = parseInt(action1 ? r.slice(0, -1) : r2.slice(0, -1));\n      temp = temp - 20;\n      if (temp < -290) {\n        refresh(WARN_MSG_POS);\n        return;\n      }\n      transform(temp, true, action1);\n      if (checkCollision()) {\n        handleCollision(temp, action1);\n        return;\n      }\n    }, i * 1500);\n  }\n  function handleCollision(temp, action1) {\n    // Determine the other sprite's position\n    const otherSprite = action1 ? ref2.current : ref.current;\n    const otherPosition = parseInt(action1 ? r2.slice(0, -1) : r.slice(0, -1));\n\n    // Calculate the bounce back distance\n    const bounceBackDistance = 10; // Distance to bounce back\n\n    // Adjust positions for bounce-back\n    if (action1) {\n      // Current sprite is moving right\n      transform(otherPosition - bounceBackDistance, true, false); // Move the second sprite left\n      transform(temp - bounceBackDistance, true, action1); // Move the first sprite back right\n    } else {\n      // Current sprite is moving left\n      transform(otherPosition + bounceBackDistance, true, true); // Move the first sprite right\n      transform(temp + bounceBackDistance, true, action1); // Move the second sprite back left\n    }\n    swapAnimations(); // Swap actions if collision occurs\n  }\n  function moveXY(xInput, yInput, random, i, action1) {\n    setTimeout(() => {\n      let tempR = parseInt(action1 ? r.slice(0, -1) : r2.slice(0, -1));\n      let tempT = parseInt(action1 ? t.slice(0, -1) : t2.slice(0, -1));\n      tempR = tempR !== parseInt(xInput) && parseInt(xInput) !== 0 ? random ? Math.floor(Math.random() * (-290 - 290) + 290) : parseInt(xInput) : tempR;\n      tempT = tempT !== -parseInt(yInput) && parseInt(yInput) !== 0 ? random ? Math.floor(Math.random() * (-140 - 140) + 140) : -parseInt(yInput) : tempT;\n      if (parseInt(yInput) === 0) {\n        tempT = 0;\n      }\n      if (parseInt(xInput) === 0) {\n        tempR = 0;\n      }\n      if (tempR < -290 || tempR > 290 || tempT < -140 || tempT > 140) {\n        refresh(WARN_MSG_POS);\n        return;\n      }\n      let valueR = tempR.toString();\n      let valueT = tempT.toString();\n      if (action1) {\n        r = valueR.concat(\"%\");\n        t = valueT.concat(\"%\");\n      } else {\n        r2 = valueR.concat(\"%\");\n        t2 = valueT.concat(\"%\");\n      }\n      action1 ? ref.current.style.transform = `scale(${scale})translate(${r}, ${t}) rotate(${angle}deg)` : ref2.current.style.transform = `scale(${scale2})translate(${r2}, ${t2}) rotate(${angle2}deg)`;\n    }, i * 1500);\n  }\n  const rotate = (rAngle, i, action1) => {\n    setTimeout(() => {\n      action1 ? angle += rAngle : angle2 += rAngle;\n      action1 ? ref.current.style.transform = `scale(${scale})translate(${r}, ${t}) rotate(${angle}deg)` : ref2.current.style.transform = `scale(${scale2})translate(${r2}, ${t2}) rotate(${angle2}deg)`;\n    }, i * 1500);\n  };\n  const startActions = (action, idx, action1) => {\n    switch (action) {\n      case \"move x by 50\":\n        {\n          moveRight(idx, action1);\n          break;\n        }\n      case \"move y by 50\":\n        {\n          moveUp(idx, action1);\n          break;\n        }\n      case \"move x by -50\":\n        {\n          moveLeft(idx, action1);\n          break;\n        }\n      case \"move y by -50\":\n        {\n          moveDown(idx, action1);\n          break;\n        }\n      case \"rotate 45\":\n        {\n          rotate(45, idx, action1);\n          break;\n        }\n      case \"rotate 90\":\n        {\n          rotate(90, idx, action1);\n          break;\n        }\n      case \"rotate 135\":\n        {\n          rotate(135, idx, action1);\n          break;\n        }\n      case \"rotate 180\":\n        {\n          rotate(180, idx, action1);\n          break;\n        }\n      case \"rotate 360\":\n        {\n          rotate(360, idx, action1);\n          break;\n        }\n      case \"random position\":\n        {\n          moveXY(1, 1, true, idx, action1);\n          break;\n        }\n      case \"move (0, 0)\":\n        {\n          moveXY(0, 0, false, idx, action1);\n          break;\n        }\n      case \"repeat\":\n        const actionsToRepeat = action1 ? actions : actions2;\n        const runNextAction = currentIndex => {\n          if (currentIndex < actionsToRepeat.length) {\n            startActions(actionsToRepeat[currentIndex].todo, currentIndex, action1);\n\n            // Check for collision immediately after starting the action\n            if (checkCollision()) {\n              handleCollision(parseInt(action1 ? r.slice(0, -1) : r2.slice(0, -1)), action1);\n\n              // Optional: Adjust sprite positions or velocities here\n              // e.g., bounce them back or change direction\n              // e.g., sprite.velocity = -sprite.velocity;\n\n              // Instead of stopping, continue to the next action\n            }\n            setTimeout(() => runNextAction(currentIndex + 1), 1500);\n          }\n        };\n        runNextAction(0);\n        break;\n      default:\n        break;\n    }\n  };\n  function clearTimeouts() {\n    var highestTimeoutId = setTimeout(\";\");\n    for (var i = 0; i < highestTimeoutId; i++) {\n      clearTimeout(i);\n    }\n  }\n  const refresh = msg => {\n    r = \"0%\";\n    t = \"0%\";\n    r2 = \"0%\";\n    t2 = \"0%\";\n    scale2 = 1;\n    angle2 = 0;\n    scale = 1;\n    angle = 0;\n    clearTimeouts();\n    setHello(false);\n    if (msg) {\n      toast.warn(msg, {\n        position: \"top-center\",\n        autoClose: 2000,\n        borderRadius: \"20px\",\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }\n    if (ref.current) {\n      ref.current.style.transform = `scale(${scale}) translate(${r}, ${t}) rotate(${angle})`;\n    }\n    if (ref2.current) {\n      ref2.current.style.transform = `scale(${scale2}) translate(${r2}, ${t2}) rotate(${angle2})`;\n    }\n  };\n  function runAction1() {\n    actions && actions.map((item, i) => {\n      startActions(item.todo, i, true);\n      return;\n    });\n  }\n  function runAction2() {\n    !displayAddIcon && actions2 && actions2.map((item, i) => {\n      startActions(item.todo, i, false);\n      return;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playRefresh\",\n      style: {\n        justifyContent: \"flex-end\",\n        display: \"flex\",\n        marginTop: \"1rem\",\n        marginBottom: \"-2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Positions, {\n        handleMove: moveXY,\n        refresh: refresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameProps\",\n        style: {\n          marginTop: \"-0.5rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Sprites, {\n          setSprite: setSprite,\n          setSprite2: setSprite2,\n          displayAddIcon: displayAddIcon,\n          sprite2: sprite2,\n          sprite: sprite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          borderRadius: \"20px\",\n          marginRight: \"3px\",\n          height: \"40px\",\n          width: \"80px\",\n          marginTop: \"2rem\"\n        },\n        color: \"success\",\n        onClick: () => {\n          runAction1();\n          runAction2();\n        },\n        children: /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          borderRadius: \"20px\",\n          height: \"40px\",\n          width: \"80px\",\n          marginTop: \"2rem\"\n        },\n        color: \"error\",\n        onClick: refresh,\n        children: /*#__PURE__*/_jsxDEV(RefreshIcon, {\n          sx: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"MovesList\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moves\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"moves__heading\",\n            children: \"Moves\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), moves === null || moves === void 0 ? void 0 : moves.map((move, index) => /*#__PURE__*/_jsxDEV(SingleAction, {\n            disableDelete: true,\n            index: index,\n            moves: moves,\n            move: move,\n            setMoves: setMoves\n          }, move.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"MovesActions\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moves actions\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"moves__heading\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), actions === null || actions === void 0 ? void 0 : actions.map((move, index) => /*#__PURE__*/_jsxDEV(SingleAction, {\n            index: index,\n            moves: actions,\n            move: move,\n            refresh: refresh,\n            setMoves: setActions\n          }, move.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), displayAddIcon && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: [/*#__PURE__*/_jsxDEV(AddBoxIcon, {\n            sx: {\n              color: \"gray\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              setDisplayAddIcon(!displayAddIcon);\n              setSprite2(require(\"../Assets/images/jerry1.png\"));\n              refresh();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"tooltiptext\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            onClick: () => {\n              setActions([]);\n            },\n            sx: {\n              cursor: \"pointer\",\n              fontSize: \"30px\",\n              color: \"Grey\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), !displayAddIcon && /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"MovesActions2\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moves actions\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"moves__heading\",\n            children: \"Action 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 17\n          }, this), actions2 === null || actions2 === void 0 ? void 0 : actions2.map((move, index) => /*#__PURE__*/_jsxDEV(SingleAction, {\n            index: index,\n            moves: actions2,\n            move: move,\n            refresh: refresh,\n            setMoves: setActions2\n          }, move.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), !displayAddIcon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: [/*#__PURE__*/_jsxDEV(DisabledByDefaultIcon, {\n          sx: {\n            color: \"gray\",\n            cursor: \"pointer\"\n          },\n          onClick: () => {\n            setDisplayAddIcon(!displayAddIcon);\n            setSprite2(null);\n            refresh();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            onClick: () => {\n              setActions([]);\n              setActions2([]);\n            },\n            sx: {\n              cursor: \"pointer\",\n              fontSize: \"30px\",\n              color: \"Grey\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"moves play\",\n        style: {\n          background: theme ? 'url(\"https://www.hp.com/us-en/shop/app/assets/images/uploads/prod/misty-forest-background1595620320482968.jpg?impolicy=prdimg&imdensity=1&imwidth=1000\")' : null,\n          backgroundSize: theme ? \"100% 100%\" : null\n        },\n        children: /*#__PURE__*/_jsxDEV(Draggable1, {\n          bounds: {\n            left: -540,\n            top: -250,\n            right: 540,\n            bottom: 250\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              ref: ref,\n              style: {\n                position: \"relative\",\n                transition: \"1s all ease\"\n              },\n              children: [hello ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  transition: \"0s all ease\"\n                },\n                className: \"msgPopup\",\n                children: \"hello!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n                src: sprite,\n                draggable: \"false\",\n                style: {\n                  cursor: \"pointer\",\n                  position: \"relative\",\n                  height: 200,\n                  width: 200,\n                  transition: \"1s all ease\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this), !displayAddIcon && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: ref2,\n              style: {\n                position: \"relative\",\n                transition: \"1s all ease\"\n              },\n              children: [hello2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  transition: \"0s all ease\"\n                },\n                className: \"msgPopup\",\n                children: \"hello!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n                src: sprite2,\n                draggable: \"false\",\n                style: {\n                  cursor: \"pointer\",\n                  position: \"relative\",\n                  height: 200,\n                  width: 200,\n                  transition: \"1s all ease\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s(EventBody, \"0WSUFR9+omxMtiNwgm4EeSiUfco=\");\n_c = EventBody;\nexport default EventBody;\nvar _c;\n$RefreshReg$(_c, \"EventBody\");","map":{"version":3,"names":["React","SingleAction","Droppable","Button","PlayArrowIcon","RefreshIcon","AddBoxIcon","DeleteIcon","DisabledByDefaultIcon","Sprites","Positions","Draggable1","ToastContainer","toast","WARN_MSG_POS","WARN_MSG_SIZE","jsxDEV","_jsxDEV","EventBody","props","_s","moves","setMoves","actions","setActions","setActions2","actions2","ref","useRef","ref2","r","t","scale","angle","r2","t2","scale2","angle2","hello","setHello","useState","hello2","setHello2","theme","displayAddIcon","setDisplayAddIcon","sprite","setSprite","require","sprite2","setSprite2","console","log","checkCollision","rect1","current","getBoundingClientRect","rect2","x","width","y","height","swapAnimations","tempActions","tempActions2","transform","temp","xAxis","action1","value","toString","concat","style","moveUp","i","setTimeout","parseInt","slice","refresh","handleCollision","moveDown","moveRight","moveLeft","otherSprite","otherPosition","bounceBackDistance","moveXY","xInput","yInput","random","tempR","tempT","Math","floor","valueR","valueT","rotate","rAngle","startActions","action","idx","actionsToRepeat","runNextAction","currentIndex","length","todo","clearTimeouts","highestTimeoutId","clearTimeout","msg","warn","position","autoClose","borderRadius","closeOnClick","pauseOnHover","draggable","runAction1","map","item","runAction2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","display","marginTop","marginBottom","handleMove","variant","sx","marginRight","color","onClick","droppableId","provided","innerRef","droppableProps","move","index","disableDelete","id","placeholder","flexDirection","alignItems","cursor","class","fontSize","background","backgroundSize","bounds","left","top","right","bottom","transition","src","_c","$RefreshReg$"],"sources":["E:/PROJECT/MIT-Scratch-Clone/src/Components/eventBody.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { SingleAction } from \"./singleAction\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Button } from \"@mui/material\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport DisabledByDefaultIcon from \"@mui/icons-material/DisabledByDefault\";\r\nimport { Sprites } from \"./spriteProps\";\r\nimport Positions from \"./positons\";\r\nimport Draggable1 from \"react-draggable\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { WARN_MSG_POS, WARN_MSG_SIZE } from \"../constants\";\r\n\r\nexport const EventBody = (props) => {\r\n  const { moves, setMoves, actions, setActions, setActions2, actions2 } = props;\r\n\r\n  const ref = React.useRef();\r\n  const ref2 = React.useRef();\r\n\r\n  let r = \"0%\";\r\n  let t = \"0%\";\r\n  let scale = 1;\r\n  let angle = 0;\r\n  let r2 = \"0%\";\r\n  let t2 = \"0%\";\r\n  let scale2 = 1;\r\n  let angle2 = 0;\r\n\r\n  const [hello, setHello] = React.useState(false);\r\n  const [hello2, setHello2] = React.useState(false);\r\n  const [theme] = React.useState(false);\r\n  const [displayAddIcon, setDisplayAddIcon] = React.useState(true);\r\n  const [sprite, setSprite] = React.useState(\r\n    require(\"../Assets/images/cat.png\")\r\n  );\r\n  const [sprite2, setSprite2] = React.useState(null);\r\n\r\n  console.log(\"rendering...\");\r\n  function checkCollision() {\r\n    const rect1 = ref.current.getBoundingClientRect();\r\n    const rect2 = ref2.current.getBoundingClientRect();\r\n\r\n    return (\r\n      rect1.x < rect2.x + rect2.width &&\r\n      rect1.x + rect1.width > rect2.x &&\r\n      rect1.y < rect2.y + rect2.height &&\r\n      rect1.y + rect1.height > rect2.y\r\n    );\r\n  }\r\n\r\n  function swapAnimations() {\r\n    // Swap actions when characters collide\r\n    const tempActions = [...actions];\r\n    const tempActions2 = [...actions2];\r\n    setActions(tempActions2);\r\n    setActions2(tempActions);\r\n  }\r\n\r\n  function transform(temp, xAxis, action1) {\r\n    let value = temp.toString();\r\n    if (xAxis) {\r\n      if (action1) {\r\n        r = value.concat(\"%\");\r\n      } else {\r\n        r2 = value.concat(\"%\");\r\n      }\r\n    } else {\r\n      if (action1) {\r\n        t = value.concat(\"%\");\r\n      } else {\r\n        t2 = value.concat(\"%\");\r\n      }\r\n    }\r\n    action1\r\n      ? (ref.current.style.transform = `scale(${scale})translate(${r}, ${t}) rotate(${angle}deg)`)\r\n      : (ref2.current.style.transform = `scale(${scale2})translate(${r2}, ${t2}) rotate(${angle2}deg)`);\r\n  }\r\n\r\n  function moveUp(i, action1) {\r\n    //move up top - 50\r\n    setTimeout(() => {\r\n      let temp = parseInt(action1 ? t.slice(0, -1) : t2.slice(0, -1));\r\n      temp = temp - 20;\r\n      if (temp < -140) {\r\n        refresh(WARN_MSG_POS);\r\n        return;\r\n      }\r\n      transform(temp, false, action1);\r\n      // Check for collision immediately after moving\r\n      if (checkCollision()) {\r\n        handleCollision(temp, action1);\r\n        return; // Stop further actions if collision occurs\r\n      }\r\n    }, i * 1500);\r\n  }\r\n  function moveDown(i, action1) {\r\n    //move down top + 50\r\n    setTimeout(() => {\r\n      let temp = parseInt(action1 ? t.slice(0, -1) : t2.slice(0, -1));\r\n      temp = temp + 20;\r\n      if (temp > 140) {\r\n        refresh(WARN_MSG_POS);\r\n        return;\r\n      }\r\n      transform(temp, false, action1);\r\n      // Check for collision immediately after moving\r\n      if (checkCollision()) {\r\n        handleCollision(temp, action1);\r\n        return;\r\n      }\r\n    }, i * 1500);\r\n  }\r\n  function moveRight(i, action1) {\r\n    setTimeout(() => {\r\n      let temp = parseInt(action1 ? r.slice(0, -1) : r2.slice(0, -1));\r\n      temp = temp + 20;\r\n      if (temp > 290) {\r\n        refresh(WARN_MSG_POS);\r\n        return;\r\n      }\r\n      transform(temp, true, action1);\r\n\r\n      if (checkCollision()) {\r\n        handleCollision(temp, action1);\r\n        return;\r\n      }\r\n    }, i * 1500);\r\n  }\r\n  function moveLeft(i, action1) {\r\n    setTimeout(() => {\r\n      let temp = parseInt(action1 ? r.slice(0, -1) : r2.slice(0, -1));\r\n      temp = temp - 20;\r\n      if (temp < -290) {\r\n        refresh(WARN_MSG_POS);\r\n        return;\r\n      }\r\n      transform(temp, true, action1);\r\n      if (checkCollision()) {\r\n        handleCollision(temp, action1);\r\n        return;\r\n      }\r\n    }, i * 1500);\r\n  }\r\n  function handleCollision(temp, action1) {\r\n    // Determine the other sprite's position\r\n    const otherSprite = action1 ? ref2.current : ref.current;\r\n    const otherPosition = parseInt(action1 ? r2.slice(0, -1) : r.slice(0, -1));\r\n\r\n    // Calculate the bounce back distance\r\n    const bounceBackDistance = 10; // Distance to bounce back\r\n\r\n    // Adjust positions for bounce-back\r\n    if (action1) {\r\n      // Current sprite is moving right\r\n      transform(otherPosition - bounceBackDistance, true, false); // Move the second sprite left\r\n      transform(temp - bounceBackDistance, true, action1); // Move the first sprite back right\r\n    } else {\r\n      // Current sprite is moving left\r\n      transform(otherPosition + bounceBackDistance, true, true); // Move the first sprite right\r\n      transform(temp + bounceBackDistance, true, action1); // Move the second sprite back left\r\n    }\r\n\r\n    swapAnimations(); // Swap actions if collision occurs\r\n  }\r\n  function moveXY(xInput, yInput, random, i, action1) {\r\n    setTimeout(() => {\r\n      let tempR = parseInt(action1 ? r.slice(0, -1) : r2.slice(0, -1));\r\n      let tempT = parseInt(action1 ? t.slice(0, -1) : t2.slice(0, -1));\r\n\r\n      tempR =\r\n        tempR !== parseInt(xInput) && parseInt(xInput) !== 0\r\n          ? random\r\n            ? Math.floor(Math.random() * (-290 - 290) + 290)\r\n            : parseInt(xInput)\r\n          : tempR;\r\n      tempT =\r\n        tempT !== -parseInt(yInput) && parseInt(yInput) !== 0\r\n          ? random\r\n            ? Math.floor(Math.random() * (-140 - 140) + 140)\r\n            : -parseInt(yInput)\r\n          : tempT;\r\n      if (parseInt(yInput) === 0) {\r\n        tempT = 0;\r\n      }\r\n      if (parseInt(xInput) === 0) {\r\n        tempR = 0;\r\n      }\r\n\r\n      if (tempR < -290 || tempR > 290 || tempT < -140 || tempT > 140) {\r\n        refresh(WARN_MSG_POS);\r\n        return;\r\n      }\r\n      let valueR = tempR.toString();\r\n      let valueT = tempT.toString();\r\n\r\n      if (action1) {\r\n        r = valueR.concat(\"%\");\r\n        t = valueT.concat(\"%\");\r\n      } else {\r\n        r2 = valueR.concat(\"%\");\r\n        t2 = valueT.concat(\"%\");\r\n      }\r\n\r\n      action1\r\n        ? (ref.current.style.transform = `scale(${scale})translate(${r}, ${t}) rotate(${angle}deg)`)\r\n        : (ref2.current.style.transform = `scale(${scale2})translate(${r2}, ${t2}) rotate(${angle2}deg)`);\r\n    }, i * 1500);\r\n  }\r\n  const rotate = (rAngle, i, action1) => {\r\n    setTimeout(() => {\r\n      action1 ? (angle += rAngle) : (angle2 += rAngle);\r\n      action1\r\n        ? (ref.current.style.transform = `scale(${scale})translate(${r}, ${t}) rotate(${angle}deg)`)\r\n        : (ref2.current.style.transform = `scale(${scale2})translate(${r2}, ${t2}) rotate(${angle2}deg)`);\r\n    }, i * 1500);\r\n  };\r\n\r\n  const startActions = (action, idx, action1) => {\r\n    switch (action) {\r\n      case \"move x by 50\": {\r\n        moveRight(idx, action1);\r\n        break;\r\n      }\r\n      case \"move y by 50\": {\r\n        moveUp(idx, action1);\r\n        break;\r\n      }\r\n      case \"move x by -50\": {\r\n        moveLeft(idx, action1);\r\n        break;\r\n      }\r\n      case \"move y by -50\": {\r\n        moveDown(idx, action1);\r\n        break;\r\n      }\r\n      case \"rotate 45\": {\r\n        rotate(45, idx, action1);\r\n        break;\r\n      }\r\n      case \"rotate 90\": {\r\n        rotate(90, idx, action1);\r\n        break;\r\n      }\r\n      case \"rotate 135\": {\r\n        rotate(135, idx, action1);\r\n        break;\r\n      }\r\n      case \"rotate 180\": {\r\n        rotate(180, idx, action1);\r\n        break;\r\n      }\r\n      case \"rotate 360\": {\r\n        rotate(360, idx, action1);\r\n        break;\r\n      }\r\n\r\n      case \"random position\": {\r\n        moveXY(1, 1, true, idx, action1);\r\n        break;\r\n      }\r\n      case \"move (0, 0)\": {\r\n        moveXY(0, 0, false, idx, action1);\r\n        break;\r\n      }\r\n\r\n      case \"repeat\":\r\n        const actionsToRepeat = action1 ? actions : actions2;\r\n        const runNextAction = (currentIndex) => {\r\n          if (currentIndex < actionsToRepeat.length) {\r\n            startActions(\r\n              actionsToRepeat[currentIndex].todo,\r\n              currentIndex,\r\n              action1\r\n            );\r\n\r\n            // Check for collision immediately after starting the action\r\n            if (checkCollision()) {\r\n              handleCollision(\r\n                parseInt(action1 ? r.slice(0, -1) : r2.slice(0, -1)),\r\n                action1\r\n              );\r\n\r\n              // Optional: Adjust sprite positions or velocities here\r\n              // e.g., bounce them back or change direction\r\n              // e.g., sprite.velocity = -sprite.velocity;\r\n\r\n              // Instead of stopping, continue to the next action\r\n            }\r\n\r\n            setTimeout(() => runNextAction(currentIndex + 1), 1500);\r\n          }\r\n        };\r\n        runNextAction(0);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  function clearTimeouts() {\r\n    var highestTimeoutId = setTimeout(\";\");\r\n    for (var i = 0; i < highestTimeoutId; i++) {\r\n      clearTimeout(i);\r\n    }\r\n  }\r\n\r\n  const refresh = (msg) => {\r\n    r = \"0%\";\r\n    t = \"0%\";\r\n    r2 = \"0%\";\r\n    t2 = \"0%\";\r\n    scale2 = 1;\r\n    angle2 = 0;\r\n    scale = 1;\r\n    angle = 0;\r\n\r\n    clearTimeouts();\r\n    setHello(false);\r\n\r\n    if (msg) {\r\n      toast.warn(msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        borderRadius: \"20px\",\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n    }\r\n\r\n    if (ref.current) {\r\n      ref.current.style.transform = `scale(${scale}) translate(${r}, ${t}) rotate(${angle})`;\r\n    }\r\n\r\n    if (ref2.current) {\r\n      ref2.current.style.transform = `scale(${scale2}) translate(${r2}, ${t2}) rotate(${angle2})`;\r\n    }\r\n  };\r\n\r\n  function runAction1() {\r\n    actions &&\r\n      actions.map((item, i) => {\r\n        startActions(item.todo, i, true);\r\n        return;\r\n      });\r\n  }\r\n  function runAction2() {\r\n    !displayAddIcon &&\r\n      actions2 &&\r\n      actions2.map((item, i) => {\r\n        startActions(item.todo, i, false);\r\n        return;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <ToastContainer />\r\n\r\n      <div\r\n        className=\"playRefresh\"\r\n        style={{\r\n          justifyContent: \"flex-end\",\r\n          display: \"flex\",\r\n          marginTop: \"1rem\",\r\n          marginBottom: \"-2rem\",\r\n        }}\r\n      >\r\n        <Positions handleMove={moveXY} refresh={refresh} />\r\n\r\n        <div className=\"gameProps\" style={{ marginTop: \"-0.5rem\" }}>\r\n          <Sprites\r\n            setSprite={setSprite}\r\n            setSprite2={setSprite2}\r\n            displayAddIcon={displayAddIcon}\r\n            sprite2={sprite2}\r\n            sprite={sprite}\r\n          />\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            borderRadius: \"20px\",\r\n            marginRight: \"3px\",\r\n            height: \"40px\",\r\n            width: \"80px\",\r\n            marginTop: \"2rem\",\r\n          }}\r\n          color=\"success\"\r\n          onClick={() => {\r\n            runAction1();\r\n            runAction2();\r\n          }}\r\n        >\r\n          <PlayArrowIcon />\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          sx={{\r\n            borderRadius: \"20px\",\r\n            height: \"40px\",\r\n            width: \"80px\",\r\n            marginTop: \"2rem\",\r\n          }}\r\n          color=\"error\"\r\n          onClick={refresh}\r\n        >\r\n          <RefreshIcon sx={{ color: \"white\" }} />\r\n        </Button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <Droppable droppableId=\"MovesList\">\r\n          {(provided) => (\r\n            <div\r\n              className=\"moves\"\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n            >\r\n              <div className=\"moves__heading\">Moves</div>\r\n              {moves?.map((move, index) => (\r\n                <SingleAction\r\n                  disableDelete={true}\r\n                  index={index}\r\n                  moves={moves}\r\n                  move={move}\r\n                  key={move.id}\r\n                  setMoves={setMoves}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n\r\n        <Droppable droppableId=\"MovesActions\">\r\n          {(provided) => (\r\n            <div\r\n              className=\"moves actions\"\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n            >\r\n              <span className=\"moves__heading\">Actions</span>\r\n              {actions?.map((move, index) => (\r\n                <SingleAction\r\n                  index={index}\r\n                  moves={actions}\r\n                  move={move}\r\n                  key={move.id}\r\n                  refresh={refresh}\r\n                  setMoves={setActions}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n\r\n        {displayAddIcon && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div className=\"icon\">\r\n              <AddBoxIcon\r\n                sx={{ color: \"gray\", cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  setDisplayAddIcon(!displayAddIcon);\r\n                  setSprite2(require(\"../Assets/images/jerry1.png\"));\r\n                  refresh();\r\n                }}\r\n              />\r\n              <span class=\"tooltiptext\">Add</span>\r\n            </div>\r\n            <div>\r\n              <DeleteIcon\r\n                onClick={() => {\r\n                  setActions([]);\r\n                }}\r\n                sx={{ cursor: \"pointer\", fontSize: \"30px\", color: \"Grey\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!displayAddIcon && (\r\n          <Droppable droppableId=\"MovesActions2\">\r\n            {(provided) => (\r\n              <div\r\n                className=\"moves actions\"\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n              >\r\n                <span className=\"moves__heading\">Action 2</span>\r\n                {actions2?.map((move, index) => (\r\n                  <SingleAction\r\n                    index={index}\r\n                    moves={actions2}\r\n                    move={move}\r\n                    key={move.id}\r\n                    refresh={refresh}\r\n                    setMoves={setActions2}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        )}\r\n        {!displayAddIcon && (\r\n          <div className=\"icon\">\r\n            <DisabledByDefaultIcon\r\n              sx={{ color: \"gray\", cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                setDisplayAddIcon(!displayAddIcon);\r\n                setSprite2(null);\r\n                refresh();\r\n              }}\r\n            />\r\n            <div>\r\n              <DeleteIcon\r\n                onClick={() => {\r\n                  setActions([]);\r\n                  setActions2([]);\r\n                }}\r\n                sx={{ cursor: \"pointer\", fontSize: \"30px\", color: \"Grey\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className=\"moves play\"\r\n          style={{\r\n            background: theme\r\n              ? 'url(\"https://www.hp.com/us-en/shop/app/assets/images/uploads/prod/misty-forest-background1595620320482968.jpg?impolicy=prdimg&imdensity=1&imwidth=1000\")'\r\n              : null,\r\n            backgroundSize: theme ? \"100% 100%\" : null,\r\n          }}\r\n        >\r\n          <Draggable1\r\n            bounds={{ left: -540, top: -250, right: 540, bottom: 250 }}\r\n          >\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <div\r\n                ref={ref}\r\n                style={{\r\n                  position: \"relative\",\r\n                  transition: \"1s all ease\",\r\n                }}\r\n              >\r\n                {hello ? (\r\n                  <div\r\n                    style={{ transition: \"0s all ease\" }}\r\n                    className=\"msgPopup\"\r\n                  >\r\n                    hello!\r\n                  </div>\r\n                ) : null}\r\n                <img\r\n                  src={sprite}\r\n                  draggable=\"false\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    position: \"relative\",\r\n                    height: 200,\r\n                    width: 200,\r\n                    transition: \"1s all ease\",\r\n                  }}\r\n                />\r\n              </div>\r\n              {!displayAddIcon && (\r\n                <div\r\n                  ref={ref2}\r\n                  style={{\r\n                    position: \"relative\",\r\n                    transition: \"1s all ease\",\r\n                  }}\r\n                >\r\n                  {hello2 ? (\r\n                    <div\r\n                      style={{ transition: \"0s all ease\" }}\r\n                      className=\"msgPopup\"\r\n                    >\r\n                      hello!\r\n                    </div>\r\n                  ) : null}\r\n                  <img\r\n                    src={sprite2}\r\n                    draggable=\"false\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      position: \"relative\",\r\n                      height: 200,\r\n                      width: 200,\r\n                      transition: \"1s all ease\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Draggable1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EventBody;\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,SAASC,YAAY,EAAEC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAClC,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,UAAU;IAAEC,WAAW;IAAEC;EAAS,CAAC,GAAGP,KAAK;EAE7E,MAAMQ,GAAG,GAAG3B,KAAK,CAAC4B,MAAM,CAAC,CAAC;EAC1B,MAAMC,IAAI,GAAG7B,KAAK,CAAC4B,MAAM,CAAC,CAAC;EAE3B,IAAIE,CAAC,GAAG,IAAI;EACZ,IAAIC,CAAC,GAAG,IAAI;EACZ,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,EAAE,GAAG,IAAI;EACb,IAAIC,EAAE,GAAG,IAAI;EACb,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EAEd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,KAAK,CAACwC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG1C,KAAK,CAACwC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACG,KAAK,CAAC,GAAG3C,KAAK,CAACwC,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,KAAK,CAACwC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAG/C,KAAK,CAACwC,QAAQ,CACxCQ,OAAO,CAAC,0BAA0B,CACpC,CAAC;EACD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlD,KAAK,CAACwC,QAAQ,CAAC,IAAI,CAAC;EAElDW,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC3B,SAASC,cAAcA,CAAA,EAAG;IACxB,MAAMC,KAAK,GAAG3B,GAAG,CAAC4B,OAAO,CAACC,qBAAqB,CAAC,CAAC;IACjD,MAAMC,KAAK,GAAG5B,IAAI,CAAC0B,OAAO,CAACC,qBAAqB,CAAC,CAAC;IAElD,OACEF,KAAK,CAACI,CAAC,GAAGD,KAAK,CAACC,CAAC,GAAGD,KAAK,CAACE,KAAK,IAC/BL,KAAK,CAACI,CAAC,GAAGJ,KAAK,CAACK,KAAK,GAAGF,KAAK,CAACC,CAAC,IAC/BJ,KAAK,CAACM,CAAC,GAAGH,KAAK,CAACG,CAAC,GAAGH,KAAK,CAACI,MAAM,IAChCP,KAAK,CAACM,CAAC,GAAGN,KAAK,CAACO,MAAM,GAAGJ,KAAK,CAACG,CAAC;EAEpC;EAEA,SAASE,cAAcA,CAAA,EAAG;IACxB;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGxC,OAAO,CAAC;IAChC,MAAMyC,YAAY,GAAG,CAAC,GAAGtC,QAAQ,CAAC;IAClCF,UAAU,CAACwC,YAAY,CAAC;IACxBvC,WAAW,CAACsC,WAAW,CAAC;EAC1B;EAEA,SAASE,SAASA,CAACC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE;IACvC,IAAIC,KAAK,GAAGH,IAAI,CAACI,QAAQ,CAAC,CAAC;IAC3B,IAAIH,KAAK,EAAE;MACT,IAAIC,OAAO,EAAE;QACXtC,CAAC,GAAGuC,KAAK,CAACE,MAAM,CAAC,GAAG,CAAC;MACvB,CAAC,MAAM;QACLrC,EAAE,GAAGmC,KAAK,CAACE,MAAM,CAAC,GAAG,CAAC;MACxB;IACF,CAAC,MAAM;MACL,IAAIH,OAAO,EAAE;QACXrC,CAAC,GAAGsC,KAAK,CAACE,MAAM,CAAC,GAAG,CAAC;MACvB,CAAC,MAAM;QACLpC,EAAE,GAAGkC,KAAK,CAACE,MAAM,CAAC,GAAG,CAAC;MACxB;IACF;IACAH,OAAO,GACFzC,GAAG,CAAC4B,OAAO,CAACiB,KAAK,CAACP,SAAS,GAAG,SAASjC,KAAK,cAAcF,CAAC,KAAKC,CAAC,YAAYE,KAAK,MAAM,GACxFJ,IAAI,CAAC0B,OAAO,CAACiB,KAAK,CAACP,SAAS,GAAG,SAAS7B,MAAM,cAAcF,EAAE,KAAKC,EAAE,YAAYE,MAAM,MAAO;EACrG;EAEA,SAASoC,MAAMA,CAACC,CAAC,EAAEN,OAAO,EAAE;IAC1B;IACAO,UAAU,CAAC,MAAM;MACf,IAAIT,IAAI,GAAGU,QAAQ,CAACR,OAAO,GAAGrC,CAAC,CAAC8C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG1C,EAAE,CAAC0C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC/DX,IAAI,GAAGA,IAAI,GAAG,EAAE;MAChB,IAAIA,IAAI,GAAG,CAAC,GAAG,EAAE;QACfY,OAAO,CAAChE,YAAY,CAAC;QACrB;MACF;MACAmD,SAAS,CAACC,IAAI,EAAE,KAAK,EAAEE,OAAO,CAAC;MAC/B;MACA,IAAIf,cAAc,CAAC,CAAC,EAAE;QACpB0B,eAAe,CAACb,IAAI,EAAEE,OAAO,CAAC;QAC9B,OAAO,CAAC;MACV;IACF,CAAC,EAAEM,CAAC,GAAG,IAAI,CAAC;EACd;EACA,SAASM,QAAQA,CAACN,CAAC,EAAEN,OAAO,EAAE;IAC5B;IACAO,UAAU,CAAC,MAAM;MACf,IAAIT,IAAI,GAAGU,QAAQ,CAACR,OAAO,GAAGrC,CAAC,CAAC8C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG1C,EAAE,CAAC0C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC/DX,IAAI,GAAGA,IAAI,GAAG,EAAE;MAChB,IAAIA,IAAI,GAAG,GAAG,EAAE;QACdY,OAAO,CAAChE,YAAY,CAAC;QACrB;MACF;MACAmD,SAAS,CAACC,IAAI,EAAE,KAAK,EAAEE,OAAO,CAAC;MAC/B;MACA,IAAIf,cAAc,CAAC,CAAC,EAAE;QACpB0B,eAAe,CAACb,IAAI,EAAEE,OAAO,CAAC;QAC9B;MACF;IACF,CAAC,EAAEM,CAAC,GAAG,IAAI,CAAC;EACd;EACA,SAASO,SAASA,CAACP,CAAC,EAAEN,OAAO,EAAE;IAC7BO,UAAU,CAAC,MAAM;MACf,IAAIT,IAAI,GAAGU,QAAQ,CAACR,OAAO,GAAGtC,CAAC,CAAC+C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG3C,EAAE,CAAC2C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC/DX,IAAI,GAAGA,IAAI,GAAG,EAAE;MAChB,IAAIA,IAAI,GAAG,GAAG,EAAE;QACdY,OAAO,CAAChE,YAAY,CAAC;QACrB;MACF;MACAmD,SAAS,CAACC,IAAI,EAAE,IAAI,EAAEE,OAAO,CAAC;MAE9B,IAAIf,cAAc,CAAC,CAAC,EAAE;QACpB0B,eAAe,CAACb,IAAI,EAAEE,OAAO,CAAC;QAC9B;MACF;IACF,CAAC,EAAEM,CAAC,GAAG,IAAI,CAAC;EACd;EACA,SAASQ,QAAQA,CAACR,CAAC,EAAEN,OAAO,EAAE;IAC5BO,UAAU,CAAC,MAAM;MACf,IAAIT,IAAI,GAAGU,QAAQ,CAACR,OAAO,GAAGtC,CAAC,CAAC+C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG3C,EAAE,CAAC2C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC/DX,IAAI,GAAGA,IAAI,GAAG,EAAE;MAChB,IAAIA,IAAI,GAAG,CAAC,GAAG,EAAE;QACfY,OAAO,CAAChE,YAAY,CAAC;QACrB;MACF;MACAmD,SAAS,CAACC,IAAI,EAAE,IAAI,EAAEE,OAAO,CAAC;MAC9B,IAAIf,cAAc,CAAC,CAAC,EAAE;QACpB0B,eAAe,CAACb,IAAI,EAAEE,OAAO,CAAC;QAC9B;MACF;IACF,CAAC,EAAEM,CAAC,GAAG,IAAI,CAAC;EACd;EACA,SAASK,eAAeA,CAACb,IAAI,EAAEE,OAAO,EAAE;IACtC;IACA,MAAMe,WAAW,GAAGf,OAAO,GAAGvC,IAAI,CAAC0B,OAAO,GAAG5B,GAAG,CAAC4B,OAAO;IACxD,MAAM6B,aAAa,GAAGR,QAAQ,CAACR,OAAO,GAAGlC,EAAE,CAAC2C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG/C,CAAC,CAAC+C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE1E;IACA,MAAMQ,kBAAkB,GAAG,EAAE,CAAC,CAAC;;IAE/B;IACA,IAAIjB,OAAO,EAAE;MACX;MACAH,SAAS,CAACmB,aAAa,GAAGC,kBAAkB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;MAC5DpB,SAAS,CAACC,IAAI,GAAGmB,kBAAkB,EAAE,IAAI,EAAEjB,OAAO,CAAC,CAAC,CAAC;IACvD,CAAC,MAAM;MACL;MACAH,SAAS,CAACmB,aAAa,GAAGC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;MAC3DpB,SAAS,CAACC,IAAI,GAAGmB,kBAAkB,EAAE,IAAI,EAAEjB,OAAO,CAAC,CAAC,CAAC;IACvD;IAEAN,cAAc,CAAC,CAAC,CAAC,CAAC;EACpB;EACA,SAASwB,MAAMA,CAACC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEf,CAAC,EAAEN,OAAO,EAAE;IAClDO,UAAU,CAAC,MAAM;MACf,IAAIe,KAAK,GAAGd,QAAQ,CAACR,OAAO,GAAGtC,CAAC,CAAC+C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG3C,EAAE,CAAC2C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAChE,IAAIc,KAAK,GAAGf,QAAQ,CAACR,OAAO,GAAGrC,CAAC,CAAC8C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG1C,EAAE,CAAC0C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAEhEa,KAAK,GACHA,KAAK,KAAKd,QAAQ,CAACW,MAAM,CAAC,IAAIX,QAAQ,CAACW,MAAM,CAAC,KAAK,CAAC,GAChDE,MAAM,GACJG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACH,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAC9Cb,QAAQ,CAACW,MAAM,CAAC,GAClBG,KAAK;MACXC,KAAK,GACHA,KAAK,KAAK,CAACf,QAAQ,CAACY,MAAM,CAAC,IAAIZ,QAAQ,CAACY,MAAM,CAAC,KAAK,CAAC,GACjDC,MAAM,GACJG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACH,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAC9C,CAACb,QAAQ,CAACY,MAAM,CAAC,GACnBG,KAAK;MACX,IAAIf,QAAQ,CAACY,MAAM,CAAC,KAAK,CAAC,EAAE;QAC1BG,KAAK,GAAG,CAAC;MACX;MACA,IAAIf,QAAQ,CAACW,MAAM,CAAC,KAAK,CAAC,EAAE;QAC1BG,KAAK,GAAG,CAAC;MACX;MAEA,IAAIA,KAAK,GAAG,CAAC,GAAG,IAAIA,KAAK,GAAG,GAAG,IAAIC,KAAK,GAAG,CAAC,GAAG,IAAIA,KAAK,GAAG,GAAG,EAAE;QAC9Db,OAAO,CAAChE,YAAY,CAAC;QACrB;MACF;MACA,IAAIgF,MAAM,GAAGJ,KAAK,CAACpB,QAAQ,CAAC,CAAC;MAC7B,IAAIyB,MAAM,GAAGJ,KAAK,CAACrB,QAAQ,CAAC,CAAC;MAE7B,IAAIF,OAAO,EAAE;QACXtC,CAAC,GAAGgE,MAAM,CAACvB,MAAM,CAAC,GAAG,CAAC;QACtBxC,CAAC,GAAGgE,MAAM,CAACxB,MAAM,CAAC,GAAG,CAAC;MACxB,CAAC,MAAM;QACLrC,EAAE,GAAG4D,MAAM,CAACvB,MAAM,CAAC,GAAG,CAAC;QACvBpC,EAAE,GAAG4D,MAAM,CAACxB,MAAM,CAAC,GAAG,CAAC;MACzB;MAEAH,OAAO,GACFzC,GAAG,CAAC4B,OAAO,CAACiB,KAAK,CAACP,SAAS,GAAG,SAASjC,KAAK,cAAcF,CAAC,KAAKC,CAAC,YAAYE,KAAK,MAAM,GACxFJ,IAAI,CAAC0B,OAAO,CAACiB,KAAK,CAACP,SAAS,GAAG,SAAS7B,MAAM,cAAcF,EAAE,KAAKC,EAAE,YAAYE,MAAM,MAAO;IACrG,CAAC,EAAEqC,CAAC,GAAG,IAAI,CAAC;EACd;EACA,MAAMsB,MAAM,GAAGA,CAACC,MAAM,EAAEvB,CAAC,EAAEN,OAAO,KAAK;IACrCO,UAAU,CAAC,MAAM;MACfP,OAAO,GAAInC,KAAK,IAAIgE,MAAM,GAAK5D,MAAM,IAAI4D,MAAO;MAChD7B,OAAO,GACFzC,GAAG,CAAC4B,OAAO,CAACiB,KAAK,CAACP,SAAS,GAAG,SAASjC,KAAK,cAAcF,CAAC,KAAKC,CAAC,YAAYE,KAAK,MAAM,GACxFJ,IAAI,CAAC0B,OAAO,CAACiB,KAAK,CAACP,SAAS,GAAG,SAAS7B,MAAM,cAAcF,EAAE,KAAKC,EAAE,YAAYE,MAAM,MAAO;IACrG,CAAC,EAAEqC,CAAC,GAAG,IAAI,CAAC;EACd,CAAC;EAED,MAAMwB,YAAY,GAAGA,CAACC,MAAM,EAAEC,GAAG,EAAEhC,OAAO,KAAK;IAC7C,QAAQ+B,MAAM;MACZ,KAAK,cAAc;QAAE;UACnBlB,SAAS,CAACmB,GAAG,EAAEhC,OAAO,CAAC;UACvB;QACF;MACA,KAAK,cAAc;QAAE;UACnBK,MAAM,CAAC2B,GAAG,EAAEhC,OAAO,CAAC;UACpB;QACF;MACA,KAAK,eAAe;QAAE;UACpBc,QAAQ,CAACkB,GAAG,EAAEhC,OAAO,CAAC;UACtB;QACF;MACA,KAAK,eAAe;QAAE;UACpBY,QAAQ,CAACoB,GAAG,EAAEhC,OAAO,CAAC;UACtB;QACF;MACA,KAAK,WAAW;QAAE;UAChB4B,MAAM,CAAC,EAAE,EAAEI,GAAG,EAAEhC,OAAO,CAAC;UACxB;QACF;MACA,KAAK,WAAW;QAAE;UAChB4B,MAAM,CAAC,EAAE,EAAEI,GAAG,EAAEhC,OAAO,CAAC;UACxB;QACF;MACA,KAAK,YAAY;QAAE;UACjB4B,MAAM,CAAC,GAAG,EAAEI,GAAG,EAAEhC,OAAO,CAAC;UACzB;QACF;MACA,KAAK,YAAY;QAAE;UACjB4B,MAAM,CAAC,GAAG,EAAEI,GAAG,EAAEhC,OAAO,CAAC;UACzB;QACF;MACA,KAAK,YAAY;QAAE;UACjB4B,MAAM,CAAC,GAAG,EAAEI,GAAG,EAAEhC,OAAO,CAAC;UACzB;QACF;MAEA,KAAK,iBAAiB;QAAE;UACtBkB,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAEc,GAAG,EAAEhC,OAAO,CAAC;UAChC;QACF;MACA,KAAK,aAAa;QAAE;UAClBkB,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAEc,GAAG,EAAEhC,OAAO,CAAC;UACjC;QACF;MAEA,KAAK,QAAQ;QACX,MAAMiC,eAAe,GAAGjC,OAAO,GAAG7C,OAAO,GAAGG,QAAQ;QACpD,MAAM4E,aAAa,GAAIC,YAAY,IAAK;UACtC,IAAIA,YAAY,GAAGF,eAAe,CAACG,MAAM,EAAE;YACzCN,YAAY,CACVG,eAAe,CAACE,YAAY,CAAC,CAACE,IAAI,EAClCF,YAAY,EACZnC,OACF,CAAC;;YAED;YACA,IAAIf,cAAc,CAAC,CAAC,EAAE;cACpB0B,eAAe,CACbH,QAAQ,CAACR,OAAO,GAAGtC,CAAC,CAAC+C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG3C,EAAE,CAAC2C,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EACpDT,OACF,CAAC;;cAED;cACA;cACA;;cAEA;YACF;YAEAO,UAAU,CAAC,MAAM2B,aAAa,CAACC,YAAY,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;UACzD;QACF,CAAC;QACDD,aAAa,CAAC,CAAC,CAAC;QAChB;MAEF;QACE;IACJ;EACF,CAAC;EAED,SAASI,aAAaA,CAAA,EAAG;IACvB,IAAIC,gBAAgB,GAAGhC,UAAU,CAAC,GAAG,CAAC;IACtC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,gBAAgB,EAAEjC,CAAC,EAAE,EAAE;MACzCkC,YAAY,CAAClC,CAAC,CAAC;IACjB;EACF;EAEA,MAAMI,OAAO,GAAI+B,GAAG,IAAK;IACvB/E,CAAC,GAAG,IAAI;IACRC,CAAC,GAAG,IAAI;IACRG,EAAE,GAAG,IAAI;IACTC,EAAE,GAAG,IAAI;IACTC,MAAM,GAAG,CAAC;IACVC,MAAM,GAAG,CAAC;IACVL,KAAK,GAAG,CAAC;IACTC,KAAK,GAAG,CAAC;IAETyE,aAAa,CAAC,CAAC;IACfnE,QAAQ,CAAC,KAAK,CAAC;IAEf,IAAIsE,GAAG,EAAE;MACPhG,KAAK,CAACiG,IAAI,CAACD,GAAG,EAAE;QACdE,QAAQ,EAAE,YAAY;QACtBC,SAAS,EAAE,IAAI;QACfC,YAAY,EAAE,MAAM;QACpBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;IAEA,IAAIzF,GAAG,CAAC4B,OAAO,EAAE;MACf5B,GAAG,CAAC4B,OAAO,CAACiB,KAAK,CAACP,SAAS,GAAG,SAASjC,KAAK,eAAeF,CAAC,KAAKC,CAAC,YAAYE,KAAK,GAAG;IACxF;IAEA,IAAIJ,IAAI,CAAC0B,OAAO,EAAE;MAChB1B,IAAI,CAAC0B,OAAO,CAACiB,KAAK,CAACP,SAAS,GAAG,SAAS7B,MAAM,eAAeF,EAAE,KAAKC,EAAE,YAAYE,MAAM,GAAG;IAC7F;EACF,CAAC;EAED,SAASgF,UAAUA,CAAA,EAAG;IACpB9F,OAAO,IACLA,OAAO,CAAC+F,GAAG,CAAC,CAACC,IAAI,EAAE7C,CAAC,KAAK;MACvBwB,YAAY,CAACqB,IAAI,CAACd,IAAI,EAAE/B,CAAC,EAAE,IAAI,CAAC;MAChC;IACF,CAAC,CAAC;EACN;EACA,SAAS8C,UAAUA,CAAA,EAAG;IACpB,CAAC5E,cAAc,IACblB,QAAQ,IACRA,QAAQ,CAAC4F,GAAG,CAAC,CAACC,IAAI,EAAE7C,CAAC,KAAK;MACxBwB,YAAY,CAACqB,IAAI,CAACd,IAAI,EAAE/B,CAAC,EAAE,KAAK,CAAC;MACjC;IACF,CAAC,CAAC;EACN;EAEA,oBACEzD,OAAA;IAAKwG,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BzG,OAAA,CAACL,cAAc;MAAA+G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElB7G,OAAA;MACEwG,SAAS,EAAC,aAAa;MACvBjD,KAAK,EAAE;QACLuD,cAAc,EAAE,UAAU;QAC1BC,OAAO,EAAE,MAAM;QACfC,SAAS,EAAE,MAAM;QACjBC,YAAY,EAAE;MAChB,CAAE;MAAAR,QAAA,gBAEFzG,OAAA,CAACP,SAAS;QAACyH,UAAU,EAAE7C,MAAO;QAACR,OAAO,EAAEA;MAAQ;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEnD7G,OAAA;QAAKwG,SAAS,EAAC,WAAW;QAACjD,KAAK,EAAE;UAAEyD,SAAS,EAAE;QAAU,CAAE;QAAAP,QAAA,eACzDzG,OAAA,CAACR,OAAO;UACNsC,SAAS,EAAEA,SAAU;UACrBG,UAAU,EAAEA,UAAW;UACvBN,cAAc,EAAEA,cAAe;UAC/BK,OAAO,EAAEA,OAAQ;UACjBH,MAAM,EAAEA;QAAO;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN7G,OAAA,CAACd,MAAM;QACLiI,OAAO,EAAC,WAAW;QACnBC,EAAE,EAAE;UACFpB,YAAY,EAAE,MAAM;UACpBqB,WAAW,EAAE,KAAK;UAClBzE,MAAM,EAAE,MAAM;UACdF,KAAK,EAAE,MAAM;UACbsE,SAAS,EAAE;QACb,CAAE;QACFM,KAAK,EAAC,SAAS;QACfC,OAAO,EAAEA,CAAA,KAAM;UACbnB,UAAU,CAAC,CAAC;UACZG,UAAU,CAAC,CAAC;QACd,CAAE;QAAAE,QAAA,eAEFzG,OAAA,CAACb,aAAa;UAAAuH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACT7G,OAAA,CAACd,MAAM;QACLiI,OAAO,EAAC,WAAW;QACnBC,EAAE,EAAE;UACFpB,YAAY,EAAE,MAAM;UACpBpD,MAAM,EAAE,MAAM;UACdF,KAAK,EAAE,MAAM;UACbsE,SAAS,EAAE;QACb,CAAE;QACFM,KAAK,EAAC,OAAO;QACbC,OAAO,EAAE1D,OAAQ;QAAA4C,QAAA,eAEjBzG,OAAA,CAACZ,WAAW;UAACgI,EAAE,EAAE;YAAEE,KAAK,EAAE;UAAQ;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN7G,OAAA;MAAKwG,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBzG,OAAA,CAACf,SAAS;QAACuI,WAAW,EAAC,WAAW;QAAAf,QAAA,EAC9BgB,QAAQ,iBACRzH,OAAA;UACEwG,SAAS,EAAC,OAAO;UACjB9F,GAAG,EAAE+G,QAAQ,CAACC,QAAS;UAAA,GACnBD,QAAQ,CAACE,cAAc;UAAAlB,QAAA,gBAE3BzG,OAAA;YAAKwG,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC1CzG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEiG,GAAG,CAAC,CAACuB,IAAI,EAAEC,KAAK,kBACtB7H,OAAA,CAAChB,YAAY;YACX8I,aAAa,EAAE,IAAK;YACpBD,KAAK,EAAEA,KAAM;YACbzH,KAAK,EAAEA,KAAM;YACbwH,IAAI,EAAEA,IAAK;YAEXvH,QAAQ,EAAEA;UAAS,GADduH,IAAI,CAACG,EAAE;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACF,CAAC,EACDY,QAAQ,CAACO,WAAW;QAAA;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eAEZ7G,OAAA,CAACf,SAAS;QAACuI,WAAW,EAAC,cAAc;QAAAf,QAAA,EACjCgB,QAAQ,iBACRzH,OAAA;UACEwG,SAAS,EAAC,eAAe;UACzB9F,GAAG,EAAE+G,QAAQ,CAACC,QAAS;UAAA,GACnBD,QAAQ,CAACE,cAAc;UAAAlB,QAAA,gBAE3BzG,OAAA;YAAMwG,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC9CvG,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE+F,GAAG,CAAC,CAACuB,IAAI,EAAEC,KAAK,kBACxB7H,OAAA,CAAChB,YAAY;YACX6I,KAAK,EAAEA,KAAM;YACbzH,KAAK,EAAEE,OAAQ;YACfsH,IAAI,EAAEA,IAAK;YAEX/D,OAAO,EAAEA,OAAQ;YACjBxD,QAAQ,EAAEE;UAAW,GAFhBqH,IAAI,CAACG,EAAE;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGb,CACF,CAAC,EACDY,QAAQ,CAACO,WAAW;QAAA;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,EAEXlF,cAAc,iBACb3B,OAAA;QACEuD,KAAK,EAAE;UACLwD,OAAO,EAAE,MAAM;UACfkB,aAAa,EAAE,QAAQ;UACvBnB,cAAc,EAAE,QAAQ;UACxBoB,UAAU,EAAE;QACd,CAAE;QAAAzB,QAAA,gBAEFzG,OAAA;UAAKwG,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBzG,OAAA,CAACX,UAAU;YACT+H,EAAE,EAAE;cAAEE,KAAK,EAAE,MAAM;cAAEa,MAAM,EAAE;YAAU,CAAE;YACzCZ,OAAO,EAAEA,CAAA,KAAM;cACb3F,iBAAiB,CAAC,CAACD,cAAc,CAAC;cAClCM,UAAU,CAACF,OAAO,CAAC,6BAA6B,CAAC,CAAC;cAClD8B,OAAO,CAAC,CAAC;YACX;UAAE;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF7G,OAAA;YAAMoI,KAAK,EAAC,aAAa;YAAA3B,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACN7G,OAAA;UAAAyG,QAAA,eACEzG,OAAA,CAACV,UAAU;YACTiI,OAAO,EAAEA,CAAA,KAAM;cACbhH,UAAU,CAAC,EAAE,CAAC;YAChB,CAAE;YACF6G,EAAE,EAAE;cAAEe,MAAM,EAAE,SAAS;cAAEE,QAAQ,EAAE,MAAM;cAAEf,KAAK,EAAE;YAAO;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EACA,CAAClF,cAAc,iBACd3B,OAAA,CAACf,SAAS;QAACuI,WAAW,EAAC,eAAe;QAAAf,QAAA,EAClCgB,QAAQ,iBACRzH,OAAA;UACEwG,SAAS,EAAC,eAAe;UACzB9F,GAAG,EAAE+G,QAAQ,CAACC,QAAS;UAAA,GACnBD,QAAQ,CAACE,cAAc;UAAAlB,QAAA,gBAE3BzG,OAAA;YAAMwG,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC/CpG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE4F,GAAG,CAAC,CAACuB,IAAI,EAAEC,KAAK,kBACzB7H,OAAA,CAAChB,YAAY;YACX6I,KAAK,EAAEA,KAAM;YACbzH,KAAK,EAAEK,QAAS;YAChBmH,IAAI,EAAEA,IAAK;YAEX/D,OAAO,EAAEA,OAAQ;YACjBxD,QAAQ,EAAEG;UAAY,GAFjBoH,IAAI,CAACG,EAAE;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGb,CACF,CAAC,EACDY,QAAQ,CAACO,WAAW;QAAA;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CACZ,EACA,CAAClF,cAAc,iBACd3B,OAAA;QAAKwG,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBzG,OAAA,CAACT,qBAAqB;UACpB6H,EAAE,EAAE;YAAEE,KAAK,EAAE,MAAM;YAAEa,MAAM,EAAE;UAAU,CAAE;UACzCZ,OAAO,EAAEA,CAAA,KAAM;YACb3F,iBAAiB,CAAC,CAACD,cAAc,CAAC;YAClCM,UAAU,CAAC,IAAI,CAAC;YAChB4B,OAAO,CAAC,CAAC;UACX;QAAE;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACF7G,OAAA;UAAAyG,QAAA,eACEzG,OAAA,CAACV,UAAU;YACTiI,OAAO,EAAEA,CAAA,KAAM;cACbhH,UAAU,CAAC,EAAE,CAAC;cACdC,WAAW,CAAC,EAAE,CAAC;YACjB,CAAE;YACF4G,EAAE,EAAE;cAAEe,MAAM,EAAE,SAAS;cAAEE,QAAQ,EAAE,MAAM;cAAEf,KAAK,EAAE;YAAO;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED7G,OAAA;QACEwG,SAAS,EAAC,YAAY;QACtBjD,KAAK,EAAE;UACL+E,UAAU,EAAE5G,KAAK,GACb,0JAA0J,GAC1J,IAAI;UACR6G,cAAc,EAAE7G,KAAK,GAAG,WAAW,GAAG;QACxC,CAAE;QAAA+E,QAAA,eAEFzG,OAAA,CAACN,UAAU;UACT8I,MAAM,EAAE;YAAEC,IAAI,EAAE,CAAC,GAAG;YAAEC,GAAG,EAAE,CAAC,GAAG;YAAEC,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI,CAAE;UAAAnC,QAAA,eAE3DzG,OAAA;YAAKuD,KAAK,EAAE;cAAEwD,OAAO,EAAE,MAAM;cAAEkB,aAAa,EAAE;YAAM,CAAE;YAAAxB,QAAA,gBACpDzG,OAAA;cACEU,GAAG,EAAEA,GAAI;cACT6C,KAAK,EAAE;gBACLuC,QAAQ,EAAE,UAAU;gBACpB+C,UAAU,EAAE;cACd,CAAE;cAAApC,QAAA,GAEDpF,KAAK,gBACJrB,OAAA;gBACEuD,KAAK,EAAE;kBAAEsF,UAAU,EAAE;gBAAc,CAAE;gBACrCrC,SAAS,EAAC,UAAU;gBAAAC,QAAA,EACrB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,GACJ,IAAI,eACR7G,OAAA;gBACE8I,GAAG,EAAEjH,MAAO;gBACZsE,SAAS,EAAC,OAAO;gBACjB5C,KAAK,EAAE;kBACL4E,MAAM,EAAE,SAAS;kBACjBrC,QAAQ,EAAE,UAAU;kBACpBlD,MAAM,EAAE,GAAG;kBACXF,KAAK,EAAE,GAAG;kBACVmG,UAAU,EAAE;gBACd;cAAE;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,EACL,CAAClF,cAAc,iBACd3B,OAAA;cACEU,GAAG,EAAEE,IAAK;cACV2C,KAAK,EAAE;gBACLuC,QAAQ,EAAE,UAAU;gBACpB+C,UAAU,EAAE;cACd,CAAE;cAAApC,QAAA,GAEDjF,MAAM,gBACLxB,OAAA;gBACEuD,KAAK,EAAE;kBAAEsF,UAAU,EAAE;gBAAc,CAAE;gBACrCrC,SAAS,EAAC,UAAU;gBAAAC,QAAA,EACrB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,GACJ,IAAI,eACR7G,OAAA;gBACE8I,GAAG,EAAE9G,OAAQ;gBACbmE,SAAS,EAAC,OAAO;gBACjB5C,KAAK,EAAE;kBACL4E,MAAM,EAAE,SAAS;kBACjBrC,QAAQ,EAAE,UAAU;kBACpBlD,MAAM,EAAE,GAAG;kBACXF,KAAK,EAAE,GAAG;kBACVmG,UAAU,EAAE;gBACd;cAAE;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1G,EAAA,CAplBWF,SAAS;AAAA8I,EAAA,GAAT9I,SAAS;AAqlBtB,eAAeA,SAAS;AAAC,IAAA8I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}