{"ast":null,"code":"var _jsxFileName = \"E:\\\\MIT-Scratch-Clone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { EventBody } from \"./Components/eventBody\";\nimport { useState } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { MOVES } from \"./constants\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [moves, setMoves] = useState(MOVES);\n  const [actions, setActions] = useState([]);\n  const [actions2, setActions2] = useState([]);\n  const onHandleDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    console.log(source, destination);\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    let add,\n      active = moves,\n      complete = actions,\n      complete2 = actions2;\n    add = active[source.index];\n    if (destination.droppableId === \"MovesActions\") {\n      complete.push(add);\n    } else {\n      complete2.push(add);\n    }\n    setActions2(complete2);\n    setActions(complete);\n    setMoves(active);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-blue-100 font-sans text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onHandleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(EventBody, {\n        moves: moves,\n        setMoves: setMoves,\n        actions: actions,\n        actions2: actions2,\n        setActions2: setActions2,\n        setActions: setActions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NIHRZdSCiEqNA/id6anUng8QFTc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","EventBody","useState","DragDropContext","MOVES","Navbar","jsxDEV","_jsxDEV","App","_s","moves","setMoves","actions","setActions","actions2","setActions2","onHandleDragEnd","result","source","destination","console","log","droppableId","index","add","active","complete","complete2","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","_c","$RefreshReg$"],"sources":["E:/MIT-Scratch-Clone/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { EventBody } from \"./Components/eventBody\";\r\nimport { useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { MOVES } from \"./constants\";\r\nimport Navbar from \"./Navbar\";\r\nexport default function App() {\r\n  const [moves, setMoves] = useState(MOVES);\r\n  const [actions, setActions] = useState([]);\r\n  const [actions2, setActions2] = useState([]);\r\n\r\n  const onHandleDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    console.log(source, destination);\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    let add,\r\n      active = moves,\r\n      complete = actions,\r\n      complete2 = actions2;\r\n\r\n    add = active[source.index];\r\n    if (destination.droppableId === \"MovesActions\") {\r\n      complete.push(add);\r\n    } else {\r\n      complete2.push(add);\r\n    }\r\n    setActions2(complete2);\r\n    setActions(complete);\r\n    setMoves(active);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-blue-100 font-sans text-center\">\r\n      <Navbar />\r\n      <DragDropContext onDragEnd={onHandleDragEnd}>\r\n        <EventBody\r\n          moves={moves}\r\n          setMoves={setMoves}\r\n          actions={actions}\r\n          actions2={actions2}\r\n          setActions2={setActions2}\r\n          setActions={setActions}\r\n        />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,KAAK,QAAQ,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACE,KAAK,CAAC;EACzC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,eAAe,GAAIC,MAAM,IAAK;IAClC,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IACtCG,OAAO,CAACC,GAAG,CAACH,MAAM,EAAEC,WAAW,CAAC;IAChC,IAAI,CAACA,WAAW,EAAE;MAChB;IACF;IAEA,IACEA,WAAW,CAACG,WAAW,KAAKJ,MAAM,CAACI,WAAW,IAC9CH,WAAW,CAACI,KAAK,KAAKL,MAAM,CAACK,KAAK,EAClC;MACA;IACF;IACA,IAAIC,GAAG;MACLC,MAAM,GAAGf,KAAK;MACdgB,QAAQ,GAAGd,OAAO;MAClBe,SAAS,GAAGb,QAAQ;IAEtBU,GAAG,GAAGC,MAAM,CAACP,MAAM,CAACK,KAAK,CAAC;IAC1B,IAAIJ,WAAW,CAACG,WAAW,KAAK,cAAc,EAAE;MAC9CI,QAAQ,CAACE,IAAI,CAACJ,GAAG,CAAC;IACpB,CAAC,MAAM;MACLG,SAAS,CAACC,IAAI,CAACJ,GAAG,CAAC;IACrB;IACAT,WAAW,CAACY,SAAS,CAAC;IACtBd,UAAU,CAACa,QAAQ,CAAC;IACpBf,QAAQ,CAACc,MAAM,CAAC;EAClB,CAAC;EAED,oBACElB,OAAA;IAAKsB,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDvB,OAAA,CAACF,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV3B,OAAA,CAACJ,eAAe;MAACgC,SAAS,EAAEnB,eAAgB;MAAAc,QAAA,eAC1CvB,OAAA,CAACN,SAAS;QACRS,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAEA,QAAS;QACnBC,OAAO,EAAEA,OAAQ;QACjBE,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA,WAAY;QACzBF,UAAU,EAAEA;MAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACzB,EAAA,CAjDuBD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}